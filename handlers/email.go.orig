package handlers

import (
	"bytes"
	"encoding/json"
	rbtmq "github.com/wurkhappy/Rabbitmq-go-wrapper"
	"github.com/wurkhappy/WH-Config"
	"net/http"
	"encoding/json"
	"net/url"
)

func EmailHead(w http.ResponseWriter, req *http.Request) {

}

func EmailPost(w http.ResponseWriter, req *http.Request) {
	buf := new(bytes.Buffer)
	buf.ReadFrom(req.Body)
<<<<<<< HEAD
	var m []map[string]interface{}
	log.Print(buf.String())
	s, err := url.QueryUnescape(buf.String())
	s = s[16:]
	err = json.Unmarshal([]byte(s), &m)
	log.Print(err)
	//log.Printf("email body is %s", m)
	//log.Printf("email body is %s", m[0]["text"])
=======

	payload := map[string]interface{}{
		"Body": map[string]interface{}{
			"message": buf.String(),
		},
	}

	body, _ := json.Marshal(payload)
	publisher, _ := rbtmq.NewPublisher(connection, config.EmailExchange, "direct", config.EmailQueue, "/comment/reply")
	publisher.Publish(body, true)
>>>>>>> 2c2629ae31c93ca9e546ad999a9b453aa78506d2
}
